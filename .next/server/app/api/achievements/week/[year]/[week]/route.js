"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/achievements/week/[year]/[week]/route";
exports.ids = ["app/api/achievements/week/[year]/[week]/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "sqlite3":
/*!**************************!*\
  !*** external "sqlite3" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("sqlite3");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fachievements%2Fweek%2F%5Byear%5D%2F%5Bweek%5D%2Froute&page=%2Fapi%2Fachievements%2Fweek%2F%5Byear%5D%2F%5Bweek%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fachievements%2Fweek%2F%5Byear%5D%2F%5Bweek%5D%2Froute.ts&appDir=C%3A%5CUsers%5CDY0330.ENG%5CDesktop%5Cproject_giji%5C20250526%5CPMESYSTEM%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CDY0330.ENG%5CDesktop%5Cproject_giji%5C20250526%5CPMESYSTEM&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fachievements%2Fweek%2F%5Byear%5D%2F%5Bweek%5D%2Froute&page=%2Fapi%2Fachievements%2Fweek%2F%5Byear%5D%2F%5Bweek%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fachievements%2Fweek%2F%5Byear%5D%2F%5Bweek%5D%2Froute.ts&appDir=C%3A%5CUsers%5CDY0330.ENG%5CDesktop%5Cproject_giji%5C20250526%5CPMESYSTEM%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CDY0330.ENG%5CDesktop%5Cproject_giji%5C20250526%5CPMESYSTEM&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_DY0330_ENG_Desktop_project_giji_20250526_PMESYSTEM_app_api_achievements_week_year_week_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/achievements/week/[year]/[week]/route.ts */ \"(rsc)/./app/api/achievements/week/[year]/[week]/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/achievements/week/[year]/[week]/route\",\n        pathname: \"/api/achievements/week/[year]/[week]\",\n        filename: \"route\",\n        bundlePath: \"app/api/achievements/week/[year]/[week]/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\DY0330.ENG\\\\Desktop\\\\project_giji\\\\20250526\\\\PMESYSTEM\\\\app\\\\api\\\\achievements\\\\week\\\\[year]\\\\[week]\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_DY0330_ENG_Desktop_project_giji_20250526_PMESYSTEM_app_api_achievements_week_year_week_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/achievements/week/[year]/[week]/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhY2hpZXZlbWVudHMlMkZ3ZWVrJTJGJTVCeWVhciU1RCUyRiU1QndlZWslNUQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmFjaGlldmVtZW50cyUyRndlZWslMkYlNUJ5ZWFyJTVEJTJGJTVCd2VlayU1RCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmFjaGlldmVtZW50cyUyRndlZWslMkYlNUJ5ZWFyJTVEJTJGJTVCd2VlayU1RCUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNEWTAzMzAuRU5HJTVDRGVza3RvcCU1Q3Byb2plY3RfZ2lqaSU1QzIwMjUwNTI2JTVDUE1FU1lTVEVNJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNEWTAzMzAuRU5HJTVDRGVza3RvcCU1Q3Byb2plY3RfZ2lqaSU1QzIwMjUwNTI2JTVDUE1FU1lTVEVNJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUN5RTtBQUN0SjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL3BtZS1zeXN0ZW0tdjAuMDFwcm9qZWN0Lz9mMjlmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkM6XFxcXFVzZXJzXFxcXERZMDMzMC5FTkdcXFxcRGVza3RvcFxcXFxwcm9qZWN0X2dpamlcXFxcMjAyNTA1MjZcXFxcUE1FU1lTVEVNXFxcXGFwcFxcXFxhcGlcXFxcYWNoaWV2ZW1lbnRzXFxcXHdlZWtcXFxcW3llYXJdXFxcXFt3ZWVrXVxcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYWNoaWV2ZW1lbnRzL3dlZWsvW3llYXJdL1t3ZWVrXS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2FjaGlldmVtZW50cy93ZWVrL1t5ZWFyXS9bd2Vla11cIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2FjaGlldmVtZW50cy93ZWVrL1t5ZWFyXS9bd2Vla10vcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxEWTAzMzAuRU5HXFxcXERlc2t0b3BcXFxccHJvamVjdF9naWppXFxcXDIwMjUwNTI2XFxcXFBNRVNZU1RFTVxcXFxhcHBcXFxcYXBpXFxcXGFjaGlldmVtZW50c1xcXFx3ZWVrXFxcXFt5ZWFyXVxcXFxbd2Vla11cXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2FjaGlldmVtZW50cy93ZWVrL1t5ZWFyXS9bd2Vla10vcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fachievements%2Fweek%2F%5Byear%5D%2F%5Bweek%5D%2Froute&page=%2Fapi%2Fachievements%2Fweek%2F%5Byear%5D%2F%5Bweek%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fachievements%2Fweek%2F%5Byear%5D%2F%5Bweek%5D%2Froute.ts&appDir=C%3A%5CUsers%5CDY0330.ENG%5CDesktop%5Cproject_giji%5C20250526%5CPMESYSTEM%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CDY0330.ENG%5CDesktop%5Cproject_giji%5C20250526%5CPMESYSTEM&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/achievements/week/[year]/[week]/route.ts":
/*!**********************************************************!*\
  !*** ./app/api/achievements/week/[year]/[week]/route.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_db_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/db_utils */ \"(rsc)/./lib/db_utils.ts\");\n\n\nconst runtime = \"nodejs\";\nasync function GET(request, { params }) {\n    try {\n        console.log(\"週データ取得API: GET リクエスト受信\");\n        const year = params.year;\n        const week = params.week;\n        console.log(`週データ取得API: パラメータ - 年=${year}, 週=${week}`);\n        const yearNum = Number.parseInt(year);\n        const weekNum = Number.parseInt(week);\n        if (isNaN(yearNum) || isNaN(weekNum) || weekNum < 1 || weekNum > 53) {\n            console.error(`週データ取得API: 無効なパラメータ - 年=${year}, 週=${week}`);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: \"無効な年または週が指定されました\"\n            }, {\n                status: 400\n            });\n        }\n        console.log(`週データ取得API: データベースからデータを取得中...`);\n        const achievements = await (0,_lib_db_utils__WEBPACK_IMPORTED_MODULE_1__.getAchievementsByWeek)(yearNum, weekNum);\n        console.log(`週データ取得API: ${achievements.length}件のデータを取得しました`);\n        // 取得したデータの一部をログに出力して確認\n        if (achievements.length > 0) {\n            console.log(\"週データ取得API: 最初のデータのサンプル:\", {\n                keyID: achievements[0].keyID,\n                businessCode: achievements[0].businessCode,\n                departmentCode: achievements[0].departmentCode,\n                classification5: achievements[0].classification5,\n                classification6: achievements[0].classification6,\n                classification7: achievements[0].classification7\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: achievements\n        });\n    } catch (error) {\n        console.error(\"週データ取得API: エラー発生\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            message: \"実績データの取得中にエラーが発生しました\",\n            error: String(error)\n        }, {\n            status: 500\n        });\n    }\n}\n// POST関数も同様に修正\nasync function POST(request, { params }) {\n    try {\n        console.log(\"週データ保存API: POST リクエスト受信\");\n        const year = params.year;\n        const week = params.week;\n        console.log(`週データ保存API: パラメータ - 年=${year}, 週=${week}`);\n        const yearNum = Number.parseInt(year);\n        const weekNum = Number.parseInt(week);\n        if (isNaN(yearNum) || isNaN(weekNum) || weekNum < 1 || weekNum > 53) {\n            console.error(`週データ保存API: 無効なパラメータ - 年=${year}, 週=${week}`);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: \"無効な年または週が指定されました\"\n            }, {\n                status: 400\n            });\n        }\n        const body = await request.json();\n        const events = body.events;\n        if (!Array.isArray(events)) {\n            console.error(\"週データ保存API: イベントデータが配列ではありません\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: \"イベントデータが正しくありません\"\n            }, {\n                status: 400\n            });\n        }\n        // 保存前にいくつかのイベントのbusinessCodeとdepartmentCodeをログに出力\n        if (events.length > 0) {\n            console.log(\"週データ保存API: 保存するイベントのサンプル:\", events.slice(0, 3).map((e)=>({\n                    keyID: e.keyID,\n                    activityCode: e.activityCode,\n                    businessCode: e.businessCode,\n                    departmentCode: e.departmentCode,\n                    classification5: e.classification5,\n                    classification6: e.classification6,\n                    classification7: e.classification7\n                })));\n        }\n        console.log(`週データ保存API: ${events.length}件のイベントを保存します`);\n        const updatedEvents = await (0,_lib_db_utils__WEBPACK_IMPORTED_MODULE_1__.withTransaction)(async (db)=>{\n            const { startDate, endDate } = getWeekDates(yearNum, weekNum);\n            const startDateStr = formatDate(startDate) + \" 00:00:00\";\n            const endDateStr = formatDate(new Date(endDate.getTime() + 86400000)) + \" 00:00:00\";\n            // 現在のユーザーIDを取得\n            const currentUserId = await (0,_lib_db_utils__WEBPACK_IMPORTED_MODULE_1__.getCurrentUserId)();\n            console.log(\"週データ保存API: 現在のユーザーID:\", currentUserId);\n            // 現在のユーザーの週データのみを取得\n            const existingEvents = await db.all(\"SELECT keyID FROM main_Zisseki WHERE startDateTime >= ? AND startDateTime < ? AND employeeNumber = ?\", [\n                startDateStr,\n                endDateStr,\n                currentUserId\n            ]);\n            console.log(\"週データ保存API: クライアントから受信したイベント:\", events.map((e)=>({\n                    id: e.id,\n                    keyID: e.keyID,\n                    employeeNumber: e.employeeNumber\n                })));\n            console.log(\"週データ保存API: データベースの既存イベント:\", existingEvents);\n            // 型を適用 - keyIDを優先的に使用\n            const eventIds = events.filter((e)=>e.keyID || e.id).map((e)=>e.keyID || e.id);\n            console.log(\"週データ保存API: クライアント側のイベントID:\", eventIds);\n            // 現在のユーザーのイベントのみを削除対象にする\n            const idsToDelete = existingEvents.map((e)=>e.keyID).filter((id)=>!eventIds.includes(id));\n            console.log(\"週データ保存API: 削除対象のイベントID:\", idsToDelete);\n            console.log(\"週データ保存API: 保存対象のイベントID:\", eventIds);\n            if (idsToDelete.length > 0) {\n                const placeholders = idsToDelete.map(()=>\"?\").join(\",\");\n                await db.run(`DELETE FROM main_Zisseki WHERE keyID IN (${placeholders})`, idsToDelete);\n                console.log(`週データ保存API: ${idsToDelete.length}件のイベントを削除しました`);\n            }\n            const updatedEventIds = [];\n            for (const event of events){\n                // keyIDを優先的に使用\n                const eventKeyID = event.keyID || event.id;\n                console.log(\"週データ保存API: 処理中のイベント:\", eventKeyID, \"employeeNumber:\", event.employeeNumber);\n                // IDが既に存在するかチェック\n                const existing = await db.get(\"SELECT keyID FROM main_Zisseki WHERE keyID = ?\", [\n                    eventKeyID\n                ]);\n                if (existing) {\n                    console.log(\"週データ保存API: UPDATE対象:\", eventKeyID);\n                    console.log(\"週データ保存API: 更新データ:\", {\n                        classification5: event.classification5,\n                        activityCode: event.activityCode\n                    });\n                    const columns = Object.keys(event).filter((k)=>k !== \"keyID\" && k !== \"id\");\n                    const setClause = columns.map((c)=>`${c} = ?`).join(\",\");\n                    const values = [\n                        ...columns.map((c)=>event[c]),\n                        eventKeyID\n                    ];\n                    await db.run(`UPDATE main_Zisseki SET ${setClause} WHERE keyID = ?`, values);\n                    updatedEventIds.push({\n                        oldId: event.oldId,\n                        newId: eventKeyID\n                    });\n                } else {\n                    console.log(\"週データ保存API: INSERT対象:\", eventKeyID);\n                    // idとkeyIDの両方を除外し、keyIDのみを使用\n                    const filteredEvent = {\n                        ...event\n                    };\n                    if (filteredEvent.id) delete filteredEvent.id;\n                    const columns = Object.keys(filteredEvent);\n                    const placeholders = columns.map(()=>\"?\").join(\",\");\n                    const values = columns.map((c)=>filteredEvent[c]);\n                    await db.run(`INSERT INTO main_Zisseki (${columns.join(\",\")}) VALUES (${placeholders})`, values);\n                    if (event.oldId) {\n                        updatedEventIds.push({\n                            oldId: event.oldId,\n                            newId: eventKeyID\n                        });\n                    }\n                }\n            }\n            console.log(`週データ保存API: 処理完了 - ${updatedEventIds.length}件のイベントIDを更新しました`);\n            return updatedEventIds;\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: \"週データが正常に保存されました\",\n            updatedEvents: updatedEvents\n        });\n    } catch (error) {\n        console.error(\"週データ保存API: エラー発生\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            message: \"週データの保存中にエラーが発生しました\",\n            error: String(error)\n        }, {\n            status: 500\n        });\n    }\n}\n// 補助関数\nfunction getWeekDates(year, week) {\n    const firstDayOfYear = new Date(year, 0, 1);\n    const daysOffset = firstDayOfYear.getDay() === 0 ? 6 : firstDayOfYear.getDay() - 1;\n    const firstWeekDay = new Date(year, 0, 1 + (week - 1) * 7 - daysOffset);\n    const startDate = new Date(firstWeekDay);\n    startDate.setDate(firstWeekDay.getDate() - firstWeekDay.getDay());\n    const endDate = new Date(startDate);\n    endDate.setDate(startDate.getDate() + 6);\n    return {\n        startDate,\n        endDate\n    };\n}\nfunction formatDate(date) {\n    return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, \"0\")}-${date.getDate().toString().padStart(2, \"0\")}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/achievements/week/[year]/[week]/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/db_utils.ts":
/*!*************************!*\
  !*** ./lib/db_utils.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addAchievement: () => (/* binding */ addAchievement),\n/* harmony export */   addActivityType: () => (/* binding */ addActivityType),\n/* harmony export */   addProjectDetails: () => (/* binding */ addProjectDetails),\n/* harmony export */   addProjectPurchaseItem: () => (/* binding */ addProjectPurchaseItem),\n/* harmony export */   addUserProject: () => (/* binding */ addUserProject),\n/* harmony export */   deleteAchievement: () => (/* binding */ deleteAchievement),\n/* harmony export */   deleteActivityType: () => (/* binding */ deleteActivityType),\n/* harmony export */   getAchievementsByMonth: () => (/* binding */ getAchievementsByMonth),\n/* harmony export */   getAchievementsByWeek: () => (/* binding */ getAchievementsByWeek),\n/* harmony export */   getActivityTypeColumns: () => (/* binding */ getActivityTypeColumns),\n/* harmony export */   getActivityTypes: () => (/* binding */ getActivityTypes),\n/* harmony export */   getCurrentUser: () => (/* binding */ getCurrentUser),\n/* harmony export */   getCurrentUserId: () => (/* binding */ getCurrentUserId),\n/* harmony export */   getDbConnection: () => (/* binding */ getDbConnection),\n/* harmony export */   getEmployees: () => (/* binding */ getEmployees),\n/* harmony export */   getProjectEquipmentNumbers: () => (/* binding */ getProjectEquipmentNumbers),\n/* harmony export */   getProjectPurchaseItems: () => (/* binding */ getProjectPurchaseItems),\n/* harmony export */   getProjectSummaryByMonth: () => (/* binding */ getProjectSummaryByMonth),\n/* harmony export */   getProjects: () => (/* binding */ getProjects),\n/* harmony export */   getTableColumns: () => (/* binding */ getTableColumns),\n/* harmony export */   getUser: () => (/* binding */ getUser),\n/* harmony export */   getUserProjects: () => (/* binding */ getUserProjects),\n/* harmony export */   setCurrentUserId: () => (/* binding */ setCurrentUserId),\n/* harmony export */   updateAchievement: () => (/* binding */ updateAchievement),\n/* harmony export */   updateActivityType: () => (/* binding */ updateActivityType),\n/* harmony export */   withTransaction: () => (/* binding */ withTransaction)\n/* harmony export */ });\n/* harmony import */ var sqlite3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sqlite3 */ \"sqlite3\");\n/* harmony import */ var sqlite3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sqlite3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var sqlite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sqlite */ \"(rsc)/./node_modules/sqlite/build/index.mjs\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n// データベースファイルのパス\nconst DB_PATH = path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"data\", \"achievements.db\");\n/**\n * データベース接続を取得する関数\n * @param dbName オプション：データベース名（デフォルトはachievements.db）\n * @returns SQLiteデータベース接続\n */ async function getDbConnection(dbName) {\n    // データディレクトリが存在しない場合は作成\n    const dataDir = path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"data\");\n    if (!fs__WEBPACK_IMPORTED_MODULE_3___default().existsSync(dataDir)) {\n        fs__WEBPACK_IMPORTED_MODULE_3___default().mkdirSync(dataDir, {\n            recursive: true\n        });\n    }\n    // データベースファイルのパスを設定\n    const dbPath = dbName ? path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"data\", `${dbName}.db`) : path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"data\", \"achievements.db\");\n    // データベースに接続\n    const db = await (0,sqlite__WEBPACK_IMPORTED_MODULE_1__.open)({\n        filename: dbPath,\n        driver: (sqlite3__WEBPACK_IMPORTED_MODULE_0___default().Database)\n    });\n    // 外部キー制約を有効化\n    await db.run(\"PRAGMA foreign_keys = ON\");\n    return db;\n}\n/**\n * トランザクションを使用してデータベース操作を行う関数\n * @param callback トランザクション内で実行するコールバック関数\n * @returns コールバック関数の戻り値\n */ async function withTransaction(callback) {\n    const db = await getDbConnection();\n    try {\n        // トランザクション開始\n        await db.run(\"BEGIN TRANSACTION\");\n        // コールバック関数を実行\n        const result = await callback(db);\n        // トランザクションをコミット\n        await db.run(\"COMMIT\");\n        return result;\n    } catch (error) {\n        // エラーが発生した場合はロールバック\n        await db.run(\"ROLLBACK\");\n        throw error;\n    } finally{\n        // データベース接続を閉じる\n        await db.close();\n    }\n}\n/**\n * 従業員データを取得する関数\n * @returns 従業員データの配列\n */ async function getEmployees() {\n    const db = await getDbConnection();\n    try {\n        return await db.all(\"SELECT * FROM employees ORDER BY employeeNumber\");\n    } finally{\n        await db.close();\n    }\n}\n/**\n * プロジェクトデータを取得する関数\n * @returns プロジェクトデータの配列\n */ async function getProjects() {\n    const db = await getDbConnection();\n    try {\n        return await db.all(\"SELECT * FROM projects ORDER BY projectNumber\");\n    } finally{\n        await db.close();\n    }\n}\n/**\n * 活動タイプデータを取得する関数\n * @param dbName オプション：データベース名\n * @returns 活動タイプデータの配列\n */ async function getActivityTypes(dbName) {\n    const db = await getDbConnection(dbName);\n    try {\n        return await db.all(\"SELECT * FROM m_activity_types ORDER BY displayOrder, typeCode\");\n    } finally{\n        await db.close();\n    }\n}\n/**\n * 現在のユーザーIDを取得する関数\n * @returns 現在のユーザーID（文字列）またはnull\n */ async function getCurrentUserId() {\n    const db = await getDbConnection();\n    try {\n        const setting = await db.get(\"SELECT value FROM app_settings WHERE key = 'Now_userID'\");\n        return setting ? setting.value : null;\n    } finally{\n        await db.close();\n    }\n}\n/**\n * 現在のユーザー情報を取得する関数\n * @returns ユーザー情報\n */ async function getCurrentUser() {\n    const userId = await getCurrentUserId();\n    const db = await getDbConnection();\n    try {\n        const user = await db.get(\"SELECT * FROM employees WHERE employeeNumber = ?\", [\n            userId\n        ]);\n        return user || null;\n    } finally{\n        await db.close();\n    }\n}\n/**\n * 現在のユーザーIDを設定する関数\n * @param userId 設定するユーザーID\n * @returns 設定が成功したかどうか\n */ async function setCurrentUserId(userId) {\n    const db = await getDbConnection();\n    try {\n        await db.run(\"INSERT OR REPLACE INTO app_settings (key, value, description) VALUES (?, ?, ?)\", [\n            \"Now_userID\",\n            userId,\n            \"現在ログイン中のユーザーID\"\n        ]);\n        return true;\n    } catch (error) {\n        return false;\n    } finally{\n        await db.close();\n    }\n}\n/**\n * 特定の年月の実績データを取得する関数\n * @param year 年\n * @param month 月\n * @returns 実績データの配列\n */ async function getAchievementsByMonth(year, month) {\n    const db = await getDbConnection();\n    try {\n        const startDate = `${year}-${month.toString().padStart(2, \"0\")}-01 00:00:00`;\n        const nextMonth = month === 12 ? 1 : month + 1;\n        const nextYear = month === 12 ? year + 1 : year;\n        const endDate = `${nextYear}-${nextMonth.toString().padStart(2, \"0\")}-01 00:00:00`;\n        return await db.all(\"SELECT * FROM main_Zisseki WHERE startDateTime >= ? AND startDateTime < ? ORDER BY startDateTime\", [\n            startDate,\n            endDate\n        ]);\n    } finally{\n        await db.close();\n    }\n}\n/**\n * 特定の年と週の実績データを取得する関数\n * @param year 年\n * @param week 週番号\n * @returns 実績データの配列\n */ async function getAchievementsByWeek(year, week) {\n    const db = await getDbConnection();\n    try {\n        const { startDate, endDate } = getWeekDates(year, week);\n        const startDateStr = formatDate(startDate) + \" 00:00:00\";\n        const endDateStr = formatDate(new Date(endDate.getTime() + 86400000)) + \" 00:00:00\";\n        // 現在のユーザーIDを取得\n        const currentUserId = await getCurrentUserId();\n        // 取得するデータのフィールドを明示的に指定\n        const results = await db.all(`SELECT \n        keyID, employeeNumber, startDateTime, endDateTime, subject, content, \n        type, organizer, projectNumber, position, facility, status, \n        businessCode, departmentCode, weekCode, \n        classification1, classification2, classification3, classification4, \n        classification5, classification6, classification7, classification8, classification9\n      FROM main_Zisseki \n      WHERE employeeNumber = ? AND startDateTime >= ? AND startDateTime < ? \n      ORDER BY startDateTime`, [\n            currentUserId,\n            startDateStr,\n            endDateStr\n        ]);\n        return results;\n    } finally{\n        await db.close();\n    }\n}\n/**\n * 実績データを追加する関数\n * @param achievement 実績データオブジェクト\n * @returns 挿入されたデータのID\n */ async function addAchievement(achievement) {\n    const db = await getDbConnection();\n    try {\n        const columns = Object.keys(achievement).join(\", \");\n        const placeholders = Object.keys(achievement).map(()=>\"?\").join(\", \");\n        const values = Object.values(achievement);\n        const result = await db.run(`INSERT INTO main_Zisseki (${columns}) VALUES (${placeholders})`, values);\n        return achievement.keyID;\n    } finally{\n        await db.close();\n    }\n}\n/**\n * 実績データを更新する関数\n * @param keyID 更新するデータのID\n * @param achievement 更新する実績データオブジェクト\n * @returns 更新が成功したかどうか\n */ async function updateAchievement(keyID, achievement) {\n    const db = await getDbConnection();\n    try {\n        const setClause = Object.keys(achievement).map((key)=>`${key} = ?`).join(\", \");\n        const values = [\n            ...Object.values(achievement),\n            keyID\n        ];\n        const result = await db.run(`UPDATE main_Zisseki SET ${setClause} WHERE keyID = ?`, values);\n        return result.changes > 0;\n    } finally{\n        await db.close();\n    }\n}\n/**\n * 実績データを削除する関数\n * @param keyID 削除するデータのID\n * @returns 削除が成功したかどうか\n */ async function deleteAchievement(keyID) {\n    const db = await getDbConnection();\n    try {\n        const result = await db.run(\"DELETE FROM main_Zisseki WHERE keyID = ?\", [\n            keyID\n        ]);\n        return result.changes > 0;\n    } finally{\n        await db.close();\n    }\n}\n/**\n * ユーザーのプロジェクトリストを取得する関数\n * @param userID ユーザーID\n * @param projectCode 特定のプロジェクトコード（オプション）\n * @returns プロジェクトの配列\n */ async function getUserProjects(userID, projectCode) {\n    const db = await getDbConnection();\n    try {\n        // project_member_historiesテーブルからデータを取得\n        let query = `\n      SELECT \n        pmh.*,\n        p.projectNumber,\n        p.name as projectName,\n        p.clientName,\n        p.classification,\n        p.status,\n        p.isProject,\n        p.projectNumber as projectCode,\n        pmh.role,\n        pmh.start_date as startDate\n      FROM project_member_histories pmh\n      INNER JOIN projects p ON pmh.project_id = p.projectNumber\n      WHERE pmh.user_id = ?\n      AND (pmh.end_date IS NULL OR pmh.end_date > date('now'))\n    `;\n        const params = [\n            userID\n        ];\n        // プロジェクトコードが指定されている場合は条件を追加\n        if (projectCode) {\n            query += \" AND pmh.project_id = ?\";\n            params.push(projectCode);\n        }\n        query += \" ORDER BY p.projectNumber ASC\";\n        const results = await db.all(query, params);\n        // 結果が空の場合のみログを出力\n        if (results.length === 0) {\n            console.log(\"プロジェクトが見つかりませんでした。\");\n            console.log(\"SQL:\", query);\n            console.log(\"パラメータ:\", params);\n        }\n        return results;\n    } catch (error) {\n        console.error(\"プロジェクト取得中にエラーが発生しました:\", error);\n        throw error;\n    } finally{\n        await db.close();\n    }\n}\n/**\n * プロジェクトの設備番号リストを取得する関数\n * @param projectCode プロジェクトコード\n * @returns 設備番号の配列\n */ async function getProjectEquipmentNumbers(projectCode) {\n    const db = await getDbConnection();\n    try {\n        // 直接projectsテーブルから取得\n        const result = await db.get(\"SELECT equipmentNumbers FROM projects WHERE projectNumber = ?\", [\n            projectCode\n        ]);\n        if (result && result.equipmentNumbers) {\n            return result.equipmentNumbers.split(\",\").map((item)=>item.trim());\n        }\n        return [];\n    } finally{\n        await db.close();\n    }\n}\n/**\n * プロジェクトの購入品リストを取得する関数\n * @param projectId プロジェクトID\n * @param equipmentNumber 設備番号\n * @returns 購入品の配列\n */ async function getProjectPurchaseItems(projectId, equipmentNumber) {\n    const db = await getDbConnection();\n    try {\n        const result = await db.all(\"SELECT * FROM project_purchase_items WHERE project_id = ? AND equipmentNumber = ? ORDER BY sequenceNumber\", [\n            projectId,\n            equipmentNumber\n        ]);\n        return result;\n    } catch (error) {\n        console.error(\"プロジェクト購入品の取得中にエラーが発生しました:\", error);\n        throw error;\n    } finally{\n        await db.close();\n    }\n}\n/**\n * ユーザープロジェクト関連を追加する関数\n * @param userID ユーザーID\n * @param projectCode プロジェクトコード\n * @param role 役割\n * @returns 挿入されたデータのID\n */ async function addUserProject(userID, projectCode, role) {\n    const db = await getDbConnection();\n    try {\n        const today = new Date().toISOString().split(\"T\")[0];\n        // 既存のメンバーシップをチェック\n        const existingMember = await db.get(`SELECT * FROM project_member_histories \n       WHERE user_id = ? AND project_id = ? \n       AND (end_date IS NULL OR end_date > date('now'))`, [\n            userID,\n            projectCode\n        ]);\n        if (existingMember) {\n            // 既存のメンバーシップがある場合は役割のみ更新\n            await db.run(`UPDATE project_member_histories \n         SET role = ? \n         WHERE user_id = ? AND project_id = ? AND end_date IS NULL`, [\n                role,\n                userID,\n                projectCode\n            ]);\n            return `${userID}_${projectCode}`;\n        }\n        // 新しいメンバーシップを追加\n        const result = await db.run(`INSERT INTO project_member_histories (user_id, project_id, start_date, role) \n       VALUES (?, ?, ?, ?)`, [\n            userID,\n            projectCode,\n            today,\n            role\n        ]);\n        return `${userID}_${projectCode}`;\n    } finally{\n        await db.close();\n    }\n}\n/**\n * プロジェクト詳細を追加する関数\n * @param projectDetails プロジェクト詳細オブジェクト\n * @returns 挿入されたデータのID\n */ async function addProjectDetails(projectDetails) {\n    const db = await getDbConnection();\n    try {\n        // equipmentNumbersが配列の場合、カンマ区切りの文字列に変換\n        if (Array.isArray(projectDetails.equipmentNumbers)) {\n            projectDetails.equipmentNumbers = projectDetails.equipmentNumbers.join(\",\");\n        }\n        const columns = Object.keys(projectDetails).join(\", \");\n        const placeholders = Object.keys(projectDetails).map(()=>\"?\").join(\", \");\n        const values = Object.values(projectDetails);\n        // projectsテーブルに直接挿入\n        await db.run(`INSERT OR REPLACE INTO projects (${columns}) VALUES (${placeholders})`, values);\n        return projectDetails.projectNumber;\n    } finally{\n        await db.close();\n    }\n}\n/**\n * プロジェクト購入品を追加する関数\n * @param purchaseItem 購入品オブジェクト\n * @returns 挿入されたデータの複合主キー\n */ async function addProjectPurchaseItem(purchaseItem) {\n    const db = await getDbConnection();\n    try {\n        // 次の連番を取得\n        if (!purchaseItem.sequenceNumber) {\n            const nextSeq = await getNextPurchaseItemSequence(db, purchaseItem.project_id, purchaseItem.equipmentNumber);\n            purchaseItem.sequenceNumber = nextSeq.toString().padStart(3, \"0\");\n        }\n        // keyIDの生成・利用は不要\n        const columns = Object.keys(purchaseItem).join(\", \");\n        const placeholders = Object.keys(purchaseItem).map(()=>\"?\").join(\", \");\n        const values = Object.values(purchaseItem);\n        await db.run(`INSERT OR REPLACE INTO project_purchase_items (${columns}) VALUES (${placeholders})`, values);\n        // 複合主キーを返す\n        return {\n            project_id: purchaseItem.project_id,\n            equipmentNumber: purchaseItem.equipmentNumber,\n            sequenceNumber: purchaseItem.sequenceNumber\n        };\n    } finally{\n        await db.close();\n    }\n}\n/**\n * 次の購入品連番を取得する関数\n * @param db データベース接続\n * @param projectId プロジェクトID\n * @param equipmentNumber 設備番号\n * @returns 次の連番\n */ async function getNextPurchaseItemSequence(db, projectId, equipmentNumber) {\n    const result = await db.get(\"SELECT MAX(CAST(sequenceNumber AS INTEGER)) as maxSeq FROM project_purchase_items WHERE project_id = ? AND equipmentNumber = ?\", [\n        projectId,\n        equipmentNumber\n    ]);\n    if (result && result.maxSeq !== null) {\n        return result.maxSeq + 1;\n    }\n    return 1;\n}\n// 週の開始日と終了日を取得する関数\nfunction getWeekDates(year, week) {\n    const firstDayOfYear = new Date(year, 0, 1);\n    const daysOffset = firstDayOfYear.getDay() === 0 ? 6 : firstDayOfYear.getDay() - 1;\n    const firstWeekDay = new Date(year, 0, 1 + (week - 1) * 7 - daysOffset);\n    const startDate = new Date(firstWeekDay);\n    startDate.setDate(firstWeekDay.getDate() - firstWeekDay.getDay());\n    const endDate = new Date(startDate);\n    endDate.setDate(startDate.getDate() + 6);\n    return {\n        startDate,\n        endDate\n    };\n}\n// 日付をYYYY-MM-DD形式にフォーマットする関数\nfunction formatDate(date) {\n    return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, \"0\")}-${date.getDate().toString().padStart(2, \"0\")}`;\n}\n/**\n * テーブルのカラム情報を取得する関数\n * @param tableName テーブル名\n * @returns カラム情報の配列\n */ async function getTableColumns(tableName) {\n    const db = await getDbConnection();\n    try {\n        return await db.all(`PRAGMA table_info(${tableName})`);\n    } finally{\n        await db.close();\n    }\n}\n/**\n * m_activity_typesテーブルのカラム情報を取得する関数\n * @param dbName オプション：データベース名\n * @param tableName オプション：テーブル名（デフォルトはm_activity_types）\n * @returns カラム情報の配列（名前と日本語名のマッピングを含む）\n */ async function getActivityTypeColumns(dbName, tableName = \"m_activity_types\") {\n    const db = await getDbConnection(dbName);\n    try {\n        const columns = await db.all(`PRAGMA table_info(${tableName})`);\n        // カラム名と日本語表示名のマッピング\n        const columnNameMap = {\n            typeCode: \"コード\",\n            typeName: \"名称\",\n            description: \"説明\",\n            category: \"大分類\",\n            subCategory: \"中分類\",\n            displayOrder: \"表示順\",\n            color: \"色\",\n            isActive: \"状態\"\n        };\n        // 表示しないシステム列やID列\n        const excludedColumns = [\n            \"id\",\n            \"created_at\",\n            \"updated_at\"\n        ];\n        return columns.filter((col)=>!excludedColumns.includes(col.name)).map((col)=>({\n                id: col.name,\n                name: columnNameMap[col.name] || col.name,\n                dataType: col.type,\n                visible: Object.keys(columnNameMap).includes(col.name) // デフォルトで表示する列\n            }));\n    } finally{\n        await db.close();\n    }\n}\n/**\n * 活動タイプを追加する関数\n * @param activityType 追加する活動タイプデータオブジェクト\n * @param dbName オプション：データベース名\n * @returns 追加した活動タイプデータ\n */ async function addActivityType(activityType, dbName) {\n    const db = await getDbConnection(dbName);\n    try {\n        const columns = Object.keys(activityType).join(\", \");\n        const placeholders = Object.keys(activityType).map(()=>\"?\").join(\", \");\n        const values = Object.values(activityType);\n        await db.run(`INSERT INTO m_activity_types (${columns}) VALUES (${placeholders})`, values);\n        // 追加したデータを返す\n        return activityType;\n    } finally{\n        await db.close();\n    }\n}\n/**\n * 活動タイプを更新する関数\n * @param typeCode 更新する活動タイプのコード\n * @param activityType 更新する活動タイプデータオブジェクト\n * @param dbName オプション：データベース名\n * @returns 更新が成功したかどうか\n */ async function updateActivityType(typeCode, activityType, dbName) {\n    const db = await getDbConnection(dbName);\n    try {\n        // typeCodeは更新対象の特定に使用するため、更新データから除外\n        const updateData = {\n            ...activityType\n        };\n        delete updateData.typeCode;\n        const setClause = Object.keys(updateData).map((key)=>`${key} = ?`).join(\", \");\n        const values = [\n            ...Object.values(updateData),\n            typeCode\n        ];\n        const result = await db.run(`UPDATE m_activity_types SET ${setClause} WHERE typeCode = ?`, values);\n        return result.changes > 0;\n    } finally{\n        await db.close();\n    }\n}\n/**\n * 活動タイプを削除する関数\n * @param typeCode 削除する活動タイプのコード\n * @param dbName オプション：データベース名\n * @returns 削除が成功したかどうか\n */ async function deleteActivityType(typeCode, dbName) {\n    const db = await getDbConnection(dbName);\n    try {\n        const result = await db.run(\"DELETE FROM m_activity_types WHERE typeCode = ?\", [\n            typeCode\n        ]);\n        return result.changes > 0;\n    } finally{\n        await db.close();\n    }\n}\n/**\n * 特定の年月のプロジェクトコード別業務集計データを取得する関数\n * @param year 年\n * @param month 月\n * @returns プロジェクトコード別の業務集計データ\n */ async function getProjectSummaryByMonth(year, month) {\n    const db = await getDbConnection();\n    try {\n        const startDate = `${year}-${month.toString().padStart(2, \"0\")}-01 00:00:00`;\n        const nextMonth = month === 12 ? 1 : month + 1;\n        const nextYear = month === 12 ? year + 1 : year;\n        const endDate = `${nextYear}-${nextMonth.toString().padStart(2, \"0\")}-01 00:00:00`;\n        // プロジェクトコード別の業務時間集計\n        const projectSummary = await db.all(`\n      SELECT \n        z.projectNumber, \n        p.name as projectName,\n        COUNT(z.keyID) as taskCount,\n        SUM((julianday(z.endDateTime) - julianday(z.startDateTime)) * 24) as totalHours,\n        z.type\n      FROM \n        main_Zisseki z\n      LEFT JOIN\n        projects p ON z.projectNumber = p.projectNumber\n      WHERE \n        z.startDateTime >= ? AND \n        z.startDateTime < ?\n      GROUP BY \n        z.projectNumber, z.type\n      ORDER BY \n        totalHours DESC\n      `, [\n            startDate,\n            endDate\n        ]);\n        // 業務タイプ別の集計\n        const typeSummary = await db.all(`\n      SELECT \n        z.type, \n        COUNT(z.keyID) as taskCount,\n        SUM((julianday(z.endDateTime) - julianday(z.startDateTime)) * 24) as totalHours\n      FROM \n        main_Zisseki z\n      WHERE \n        z.startDateTime >= ? AND \n        z.startDateTime < ?\n      GROUP BY \n        z.type\n      ORDER BY \n        totalHours DESC\n      `, [\n            startDate,\n            endDate\n        ]);\n        return {\n            projectSummary,\n            typeSummary\n        };\n    } finally{\n        await db.close();\n    }\n}\nasync function getUser(userId) {\n    const db = await getDbConnection();\n    try {\n        const user = await db.get(`\n      SELECT \n        user_id,\n        name_japanese as name,\n        syokui as position,\n        bumon as department,\n        sitsu as section,\n        ka as team,\n        mail as email,\n        TEL_naisen as telNaisen,\n        TEL as telGaisen,\n        company,\n        name_english,\n        name_yomi,\n        in_year,\n        Kengen as authority\n      FROM all_user\n      WHERE user_id = ?\n    `, [\n            userId\n        ]);\n        return user;\n    } catch (error) {\n        console.error(\"ユーザー情報の取得中にエラーが発生しました:\", error);\n        throw error;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/db_utils.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/sqlite"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fachievements%2Fweek%2F%5Byear%5D%2F%5Bweek%5D%2Froute&page=%2Fapi%2Fachievements%2Fweek%2F%5Byear%5D%2F%5Bweek%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fachievements%2Fweek%2F%5Byear%5D%2F%5Bweek%5D%2Froute.ts&appDir=C%3A%5CUsers%5CDY0330.ENG%5CDesktop%5Cproject_giji%5C20250526%5CPMESYSTEM%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CDY0330.ENG%5CDesktop%5Cproject_giji%5C20250526%5CPMESYSTEM&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();